Robots generate huge amount of data from (different types of) sensors attached to it and also from its hardware components.

(Typically, these data come from different
sources and requires different treatment)

(we can roughly split these data into two categories)

Two categories:

Streams of raw sensor data:

	Generated at high frequency and the size can vary from small (eg tick of an encoder) to large blob data (eg point cloud from laser scanner)


Meta data:
	
	It connects different sensor data with the information and knowledge required to interpret them.


Note: think about adding images and transition one by one.
https://www.amazon.de/dp/B07FNZJS8J/ref=psdc_1626220031_t3_B01LX5KHR7

(
show a point cloud image and say,

Lets consider this is a point cloud image generated by a robot during exploration. 

eg. which robot has produced that data using which sensor with which settings at which position, and also which algorithm while performing what task

Now how one can tell the exact position of the robot or which robot generated this point cloud while doing which task? 
)

Sometime data are stored locally in the robot (in the form of text files, log files, or ROS bags ) and most of the times data has been discarded (after the data is utilized)

Developers often write adhoc solutions to write/read data from the files (which is stored locally in the robot and sharing these stream of large blobs between multirobots is a tedious task).


(To address this problem, in our previous work we decided to use a single database to store these stream of data and meta data as well. But there are hundereds of databases availabe in the market and we don't know which one would be better solution to handle robot generated data. To find that we've done a qualitative analysis with a selcted 17 databases and quantitative analysis with a 8 databases selected based on the results on from quantitative analysis)

Note : Show results from previous work

Results from our previous work show that a single database is not suitable for every robotic scenario.

Also this recent work from [author] uses multiple database to store different types of data.

Solution :

Adopting multiple databases for robotic applications.

But it requires a unique way of mediation to view multiple databases as a single federated database.


What is mediator?

mediator helps to integrate data from different sources and produce a single result regardless of the number and types of database used. 

Mediator abstracts the information of how data is being stored in various data sources from a robot and allows robotic applications stream data to mediator (independent of databases used in the back-end)


Approach:

Investigate the existing mediator systems to understand 

Requirements to design and construct a mediator system:

From the previous mediator we have observed 











